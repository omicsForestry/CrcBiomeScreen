test_that("RunScreening works", {
  toydata <- curatedMetagenomicData(
    "ThomasAM_2018a.relative_abundance"
    , dryrun = FALSE, rownames = "short")

  CrcBiomeScreenObject <- CreateCrcBiomeScreenObject(RelativeAbundance = toydata[[1]]@assays@data@listData$relative_abundance,
                                               TaxaData = toydata[[1]]@rowLinks$nodeLab,
                                               SampleData = toydata[[1]]@colData)
  CrcBiomeScreenObject <- SplitTaxas(CrcBiomeScreenObject)
  CrcBiomeScreenObject <- KeepGenusLevel(CrcBiomeScreenObject)
  CrcBiomeScreenObject <- NormalizeData(CrcBiomeScreenObject, method = "GMPR")
  # ----------------------------------------------------------------------------
  ValidationData_curated <- curatedMetagenomicData(
    paste0("ZellerG_2014",".","relative_abundance")
    , dryrun = FALSE, rownames = "short")

  ValidationData <- CreateCrcBiomeScreenObject(RelativeAbundance = ValidationData_curated[[1]]@assays@data@listData$relative_abundance,
                                               TaxaData = ValidationData_curated[[1]]@rowLinks$nodeLab,
                                               SampleData = ValidationData_curated[[1]]@colData)
  ValidationData <- SplitTaxas(ValidationData)
  ValidationData <- KeepGenusLevel(ValidationData)
  ValidationData <- NormalizeData(ValidationData, method = "GMPR")

  ValidationData$NormalizedData <- ValidationData$NormalizedData[, colnames(ValidationData$NormalizedData) %in%
                                                                   colnames(CrcBiomeScreenObject$NormalizedData)]

  CrcBiomeScreenObject$NormalizedData <- CrcBiomeScreenObject$NormalizedData[, colnames(CrcBiomeScreenObject$NormalizedData) %in%
                                                                               colnames(ValidationData$NormalizedData)]
  ValidationData_filtered <- FilterDataSet(ValidationData,
                                           label = c("CRC","control"),
                                           condition_col = "study_condition")

  ValidationData_filtered_qc <- qcByCmdscale(ValidationData_filtered,
                                             TaskName = "Normalize_ValidationData_filtered_qc",
                                             normalize_method = "GMPR")
  # ----------------------------------------------------------------------------
  CrcBiomeScreenObject <- RunScreening(obj = CrcBiomeScreenObject,
                                       normalize_method = "GMPR",
                                       model_type = "RF",
                                       partition = 0.7,
                                       split.requirement =
                                         c(label = c("control","CRC"),
                                           condition_col = "study_condition"),
                                       ClassBalance = TRUE,
                                       n_cv = 10,
                                       TaskName = "GMPR_toydata_RF",
                                       num_cores = 10,
                                       ValidationData = ValidationData_filtered_qc,
                                       TrueLabel = "CRC")

  CrcBiomeScreenObject <- RunScreening(CrcBiomeScreenObject,
                                       normalize_method = "GMPR",
                                       model = "XGBoost",
                                       partition = 0.7,
                                       ClassBalance = TRUE,
                                       n_cv = 10,
                                       split.requirement =
                                         c(label = c("control","CRC"),
                                           condition_col = "study_condition"),
                                       TaskName = "GMPR_toydata_XGBoost",
                                       num_cores = 10,
                                       ValidationData = ValidationData_filtered_qc,
                                       TrueLabel = "CRC")

  expect_true(!is.null(CrcBiomeScreenObject$PredictResult$RF))
  expect_true(!is.null(CrcBiomeScreenObject$PredictResult$XGBoost))

})
